---
import { contenidoProductos } from '../data/contenidoProductos.js';
---

<section class="productos-destacados">
    <div class="container">
        <div class="header">
            <h2>{contenidoProductos.titulo}</h2>
            <!-- <p>{contenidoProductos.descripcion}</p> -->
        </div>
        
        <div class="slider-container">
            <!-- Flecha izquierda fuera del slider -->
            <button class="slider-btn prev external-control" id="prevBtn" aria-label="Producto anterior">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M15 18l-6-6 6-6"/>
                </svg>
            </button>

            <div class="slider-wrapper">
                <div class="productos-slider" id="productosSlider">
                    {contenidoProductos.productos.map((producto) => (
                        <div class="producto-card">
                            <div class="producto-content">
                                <div class="producto-imagen">
                                    <img src={producto.imagen} alt={producto.nombre} loading="lazy" />
                                </div>
                                <div class="producto-info">
                                    <div class="producto-categoria">
                                        <span class="categoria-tag">{producto.categoria}</span>
                                    </div>
                                    <h3 class="producto-titulo">{producto.nombre}</h3>
                                    <p class="producto-descripcion">{producto.descripcion}</p>
                                    
                                    <div class="producto-detalles">
                                        {producto.detalles.map((detalle) => (
                                            <div class="detalle-item">
                                                <div class="detalle-icono">
                                                    <img src={detalle.icono} alt="">
                                                </div>
                                                <div class="detalle-contenido">
                                                    <h4>{detalle.titulo}</h4>
                                                    <span>{detalle.valor}</span>
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
            
            <!-- Flecha derecha fuera del slider -->
            <button class="slider-btn next external-control" id="nextBtn" aria-label="Siguiente producto">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M9 18l6-6-6-6"/>
                </svg>
            </button>
            
            <div class="slider-dots" id="sliderDots">
                {contenidoProductos.productos.map((_, index) => (
                    <button class={`dot ${index === 0 ? 'active' : ''}`} data-slide={index}></button>
                ))}
            </div>
        </div>
    </div>
</section>

<style>
    @import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400;700&display=swap');

    :root {
        --font-principal: 'Roboto Condensed', sans-serif;
        
        /* Fluid Typography */
        --fs-title: clamp(1.5rem, 4vw, 3.2rem);
        --fs-product-title: clamp(1.2rem, 3vw, 2.5rem);
        --fs-description: clamp(0.85rem, 2vw, 1rem);
        --fs-detail-title: clamp(0.9rem, 2vw, 1.2rem);
        --fs-detail-value: clamp(0.75rem, 1.5vw, 1rem);
        
        /* Fluid Spacing */
        --section-padding: clamp(40px, 8vw, 80px);
        --container-padding: clamp(15px, 3vw, 20px);
        --card-padding: clamp(15px, 3vw, 40px);
        --gap-small: clamp(10px, 2vw, 20px);
        --gap-medium: clamp(20px, 4vw, 40px);
    }

    .productos-destacados {
        padding: var(--section-padding) var(--container-padding);
        background: linear-gradient(to bottom, #0F4E67 0%, #1E9BCD 100%);
        min-height: 60px;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
    }

    .header {
        text-align: center;
        margin-bottom: clamp(30px, 6vw, 50px);
    }

    .header h2 {
        font-family: var(--font-principal);
        font-size: var(--fs-title);
        font-weight: 700;
        color: #FFFFFF;
        margin: 0 0 15px 0;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .header p {
        font-family: var(--font-principal);
        font-size: 1.1rem;
        color: #FFFFFF;
        max-width: 600px;
        margin: 0 auto;
        line-height: 1.6;
    }

    .slider-container {
        position: relative;
        display: flex;
        align-items: center;
        gap: var(--gap-medium);
    }

    .slider-wrapper {
        overflow: hidden;
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        flex: 1;
    }

    .productos-slider {
        display: flex;
        transition: transform 0.5s ease-in-out;
        width: 100%;
    }

    .producto-card {
        min-width: 100%;
        min-height: clamp(400px, 50vh, 600px);
        background: linear-gradient(to bottom, #092F3E 0%, #187CA4 100%);
        border-radius: 20px;
        overflow: hidden;
        position: relative;
        display: flex;
        align-items: center;
    }

    .producto-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        width: 100%;
        height: 100%;
        align-items: center;
        gap: var(--card-padding);
        padding: var(--card-padding);
    }

    .producto-imagen {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        min-height: 250px;
    }

    .producto-imagen img {
        max-width: 90%;
        max-height: 90%;
        width: auto;
        height: auto;
        object-fit: contain;
        filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.3));
        transition: transform 0.3s ease;
    }

    .producto-imagen img:hover {
        transform: scale(1.05);
    }

    .producto-info {
        color: white;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: var(--gap-small);
    }

    .producto-categoria {
        margin-bottom: 5px;
    }

    .categoria-tag {
        background: linear-gradient(135deg, #ff6b35 0%, #ff8c42 100%);
        color: white;
        padding: clamp(6px, 1.5vw, 8px) clamp(15px, 3vw, 20px);
        border-radius: 25px;
        font-weight: 700;
        font-size: clamp(0.8rem, 1.5vw, 0.9rem);
        font-family: var(--font-principal);
        text-transform: uppercase;
        letter-spacing: 1px;
        display: inline-block;
    }

    .producto-titulo {
        font-family: var(--font-principal);
        font-size: var(--fs-product-title);
        font-weight: 700;
        margin: 0;
        color: #4fc3f7;
        text-transform: uppercase;
        letter-spacing: clamp(1px, 0.3vw, 2px);
        line-height: 1.2;
    }

    .producto-descripcion {
        font-family: var(--font-principal);
        font-size: var(--fs-description);
        line-height: 1.6;
        margin: 0;
        color: #ecf0f1;
        opacity: 0.9;
    }

    .producto-detalles {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: var(--gap-small);
        margin-top: 10px;
    }

    .detalle-item {
        display: flex;
        align-items: center;
        gap: clamp(8px, 2vw, 12px);
    }

    .detalle-icono {
        width: clamp(35px, 6vw, 40px);
        height: clamp(35px, 6vw, 40px);
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
    }

    .detalle-icono img {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }

    .detalle-contenido h4 {
        font-family: var(--font-principal);
        font-size: var(--fs-detail-title);
        font-weight: 600;
        margin: 0 0 2px 0;
        color: #4fc3f7;
        line-height: 1.2;
    }

    .detalle-contenido span {
        font-family: var(--font-principal);
        font-size: var(--fs-detail-value);
        color: #ecf0f1;
        opacity: 0.8;
        line-height: 1.3;
    }

    /* Controles externos del slider */
    .slider-btn {
        width: clamp(50px, 8vw, 60px);
        height: clamp(50px, 8vw, 60px);
        background: rgba(255, 107, 53, 0.9);
        border: 2px solid #ff6b35;
        border-radius: 50%;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
        z-index: 10;
        flex-shrink: 0;
    }

    .slider-btn svg {
        width: clamp(20px, 3vw, 24px);
        height: clamp(20px, 3vw, 24px);
    }

    .slider-btn:hover {
        background: #ff6b35;
        transform: scale(1.1);
        box-shadow: 0 8px 25px rgba(255, 107, 53, 0.4);
    }

    .slider-btn:disabled {
        opacity: 0.3;
        cursor: not-allowed;
        transform: scale(1);
        background: rgba(255, 255, 255, 0.1);
        border-color: rgba(255, 255, 255, 0.2);
    }

    .slider-dots {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 30px;
        position: absolute;
        bottom: clamp(-50px, -8vw, -40px);
        left: 50%;
        transform: translateX(-50%);
    }

    .dot {
        width: clamp(10px, 2vw, 12px);
        height: clamp(10px, 2vw, 12px);
        border-radius: 50%;
        border: none;
        background: rgba(255, 255, 255, 0.4);
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .dot.active,
    .dot:hover {
        background: #ff6b35;
        transform: scale(1.2);
    }

    /* ===== RESPONSIVE BREAKPOINTS ===== */

    /* Large Desktop: 1200px+ */
    @media (min-width: 1200px) {
        .producto-detalles {
            gap: 25px 20px;
        }
        
        .producto-info {
            gap: 25px;
        }
    }

    /* Desktop/Tablet Landscape: 1024px - 1199px */
    @media (min-width: 1024px) and (max-width: 1199px) {
        .slider-container {
            gap: 30px;
        }
        
        .producto-content {
            gap: 30px;
            padding: 30px;
        }
        
        .producto-detalles {
            gap: 15px 10px;
        }
    }

    /* Tablet Portrait: 768px - 1023px */
    @media (min-width: 768px) and (max-width: 1023px) {
        .slider-container {
            gap: 20px;
        }
        
        .slider-btn {
            width: 45px;
            height: 45px;
        }
        
        .slider-btn svg {
            width: 18px;
            height: 18px;
        }
        
        .producto-content {
            gap: 25px;
            padding: 25px;
        }
        
        .producto-detalles {
            gap: 12px 8px;
        }
        
        .detalle-icono {
            width: 32px;
            height: 32px;
        }
        
        /* Tablets verticales específicas */
        @media (min-height: 1000px) {
            .producto-card {
                min-height: 500px;
            }
            
            .producto-imagen {
                min-height: 300px;
            }
        }
    }

    /* Mobile Landscape: 568px - 767px */
    @media (min-width: 568px) and (max-width: 767px) and (orientation: landscape) {
        .productos-destacados {
            padding: 30px 15px;
        }
        
        .producto-card {
            min-height: 350px;
        }
        
        .producto-content {
            grid-template-columns: 1.2fr 1fr;
            gap: 20px;
            padding: 20px;
        }
        
        .producto-imagen {
            min-height: 200px;
        }
        
        .producto-detalles {
            grid-template-columns: 1fr;
            gap: 8px;
        }
        
        .slider-btn.external-control {
            width: 40px;
            height: 40px;
        }
        
        .slider-container {
            gap: 15px;
        }
    }

    /* Mobile Portrait: 320px - 767px */
    @media (max-width: 767px) {
        .slider-btn.external-control {
            display: none;
        }

        .slider-container {
            gap: 0;
        }

        .producto-content {
            grid-template-columns: 1fr;
            gap: 20px;
            padding: 20px;
            text-align: center;
        }

        .producto-imagen {
            order: 1;
            min-height: clamp(180px, 35vw, 220px);
        }

        .producto-info {
            order: 2;
            gap: 15px;
        }

        .producto-detalles {
            grid-template-columns: 1fr;
            gap: 12px;
            text-align: left;
        }

        .detalle-item {
            justify-content: flex-start;
        }

        .slider-dots {
            bottom: -45px;
        }
        
        .producto-card {
            min-height: auto;
            padding: 15px 0;
        }
    }

    /* Small Mobile: 320px - 479px */
    @media (max-width: 479px) {
        .producto-content {
            padding: 15px;
            gap: 15px;
        }

        .producto-info {
            gap: 12px;
        }

        .producto-detalles {
            gap: 10px;
        }

        .detalle-item {
            gap: 8px;
        }

        .detalle-icono {
            width: 30px;
            height: 30px;
        }
        
        .slider-dots {
            bottom: -40px;
        }
    }

    /* Pantallas muy anchas: 1400px+ */
    @media (min-width: 1400px) {
        .container {
            max-width: 1400px;
        }
        
        .producto-content {
            gap: 50px;
            padding: 50px;
        }
        
        .producto-detalles {
            gap: 30px 25px;
        }
    }

    /* Pantallas muy altas en tablets */
    @media (min-width: 768px) and (min-height: 1200px) {
        .producto-card {
            min-height: 600px;
        }
        
        .producto-imagen {
            min-height: 350px;
        }
        
        .producto-info {
            gap: 30px;
        }
    }

    /* Ajustes para pantallas ultra-wide */
    @media (min-aspect-ratio: 21/9) {
        .producto-content {
            grid-template-columns: 1.5fr 1fr;
        }
        
        .producto-imagen img {
            max-width: 80%;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const slider = document.getElementById('productosSlider');
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        const dots = document.querySelectorAll('.dot');
        
        if (!slider || !prevBtn || !nextBtn) return;

        let currentSlide = 0;
        const totalSlides = slider.children.length;

        function updateSlider() {
            const translateX = -currentSlide * 100;
            slider.style.transform = `translateX(${translateX}%)`;
            
            // Update dots
            dots.forEach((dot, index) => {
                dot.classList.toggle('active', index === currentSlide);
            });
            
            // Update button states
            prevBtn.disabled = currentSlide === 0;
            nextBtn.disabled = currentSlide === totalSlides - 1;
        }

        function nextSlide() {
            if (currentSlide < totalSlides - 1) {
                currentSlide++;
                updateSlider();
            }
        }

        function prevSlide() {
            if (currentSlide > 0) {
                currentSlide--;
                updateSlider();
            }
        }

        function goToSlide(slideIndex) {
            currentSlide = slideIndex;
            updateSlider();
        }

        // Event listeners
        nextBtn.addEventListener('click', nextSlide);
        prevBtn.addEventListener('click', prevSlide);

        dots.forEach((dot, index) => {
            dot.addEventListener('click', () => goToSlide(index));
        });

        // Keyboard navigation
        document.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowRight') nextSlide();
            if (e.key === 'ArrowLeft') prevSlide();
        });

        // Enhanced touch/swipe support
        let startX = 0;
        let startY = 0;
        let isDragging = false;
        let hasMoved = false;

        slider.addEventListener('touchstart', (e) => {
            startX = e.touches[0].clientX;
            startY = e.touches[0].clientY;
            isDragging = true;
            hasMoved = false;
        }, { passive: true });

        slider.addEventListener('touchmove', (e) => {
            if (!isDragging) return;
            
            const currentX = e.touches[0].clientX;
            const currentY = e.touches[0].clientY;
            const diffX = Math.abs(currentX - startX);
            const diffY = Math.abs(currentY - startY);
            
            // Only prevent default if horizontal swipe is more significant
            if (diffX > diffY && diffX > 10) {
                e.preventDefault();
                hasMoved = true;
            }
        }, { passive: false });

        slider.addEventListener('touchend', (e) => {
            if (!isDragging || !hasMoved) return;
            isDragging = false;
            
            const endX = e.changedTouches[0].clientX;
            const diffX = startX - endX;
            
            // Minimum swipe distance
            if (Math.abs(diffX) > 50) {
                if (diffX > 0) {
                    nextSlide();
                } else {
                    prevSlide();
                }
            }
        }, { passive: true });

        // Mouse drag support for desktop
        let mouseStartX = 0;
        let isMouseDragging = false;

        slider.addEventListener('mousedown', (e) => {
            mouseStartX = e.clientX;
            isMouseDragging = true;
            slider.style.cursor = 'grabbing';
            e.preventDefault();
        });

        document.addEventListener('mousemove', (e) => {
            if (!isMouseDragging) return;
            e.preventDefault();
        });

        document.addEventListener('mouseup', (e) => {
            if (!isMouseDragging) return;
            isMouseDragging = false;
            slider.style.cursor = 'grab';
            
            const diffX = mouseStartX - e.clientX;
            
            if (Math.abs(diffX) > 50) {
                if (diffX > 0) {
                    nextSlide();
                } else {
                    prevSlide();
                }
            }
        });

        // Initialize
        updateSlider();

        // Enhanced auto-play with better pause/resume logic
        let autoplayInterval;
        let isAutoplayPaused = false;
        
        const startAutoplay = () => {
            if (isAutoplayPaused) return;
            
            autoplayInterval = setInterval(() => {
                if (currentSlide === totalSlides - 1) {
                    currentSlide = 0;
                } else {
                    currentSlide++;
                }
                updateSlider();
            }, 5000);
        };

        const stopAutoplay = () => {
            clearInterval(autoplayInterval);
        };

        const pauseAutoplay = () => {
            isAutoplayPaused = true;
            stopAutoplay();
        };

        const resumeAutoplay = () => {
            isAutoplayPaused = false;
            startAutoplay();
        };

        // Pause autoplay on interaction
        slider.addEventListener('mouseenter', stopAutoplay);
        slider.addEventListener('mouseleave', () => {
            if (!isAutoplayPaused) startAutoplay();
        });

        // Pause on focus (accessibility)
        slider.addEventListener('focusin', pauseAutoplay);
        slider.addEventListener('focusout', resumeAutoplay);

        // Pause when page is not visible
        document.addEventListener('visibilitychange', () => {
            if (document.hidden) {
                stopAutoplay();
            } else if (!isAutoplayPaused) {
                startAutoplay();
            }
        });

        // Start autoplay
        startAutoplay();

        // Responsive behavior adjustments
        const handleResize = () => {
            // Reset any transforms that might be affected by resize
            updateSlider();
        };

        window.addEventListener('resize', handleResize);
        window.addEventListener('orientationchange', () => {
            setTimeout(handleResize, 100);
        });
    });
</script>